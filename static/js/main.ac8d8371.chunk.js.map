{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Gasto.js","componentes/Listado.js","componentes/Presupuesto.js","helper.js","componentes/Restante.js","componentes/ControlPresupuesto.js","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","titulo","FormularioGasto","nombreGasto","React","createRef","cantidadGasto","crearGasto","e","preventDefault","gasto","_this","current","value","agregarGasto","currentTarget","reset","onSubmit","this","className","ref","type","placeholder","Component","Gasto","_this$props$gasto","proptypes","PropTypes","object","isRequired","Listado","Object","keys","gastos","map","key","componentes_Gasto","Presupuesto","presupuesto","validarPresupuesto","totalPresupuesto","parseInt","Restante","restante","revisarPresupuesto","ControlPresupuesto","Fragment","componentes_Presupuesto","componentes_Restante","App","state","obtenerPresupuesto","prompt","setState","objectSpread","concat","Date","now","restarPresupuesto","cantidad","restar","Number","String","componentes_Header","Formulario","componentes_Listado","componentes_ControlPresupuesto","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac8d8371.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <header>\r\n            <h1>{props.titulo}</h1>\r\n        </header>\r\n    )\r\n\r\n   \r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default Header;","    import React, {Component} from 'react';\r\n    import PropTypes from 'prop-types'\r\n\r\n    class FormularioGasto extends Component {\r\n        \r\n        //references for each field \r\n        nombreGasto = React.createRef();\r\n        cantidadGasto = React.createRef();\r\n\r\n        \r\n        crearGasto = (e) =>{\r\n            e.preventDefault();\r\n            //crear objeto\r\n            const gasto = {\r\n                nombreGasto: this.nombreGasto.current.value,\r\n                cantidadGasto: this.cantidadGasto.current.value\r\n            }\r\n\r\n            this.props.agregarGasto(gasto);\r\n            e.currentTarget.reset();\r\n\r\n        }\r\n        \r\n        render() {\r\n            return (\r\n                <form onSubmit={this.crearGasto}>\r\n                    <h2>Agrega tus gastos aqui</h2>\r\n                    <div className=\"campo\">\r\n                        <label>Nombre Gasto</label>\r\n                        <input  ref = {this.nombreGasto} className=\"u-full-width\" type=\"text\" placeholder=\"Ej. Transporte\"  />\r\n                    </div>\r\n\r\n                    <div className=\"campo\">\r\n                        <label>Cantidad</label>\r\n                        <input ref={this.cantidadGasto} className=\"u-full-width\" type=\"number\" placeholder=\"Ej. 300\" />\r\n                    </div>\r\n\r\n                    <input className=\"button-primary u-full-width\" type=\"submit\" value=\"Agregar\" />\r\n                </form>\r\n            )\r\n        }\r\n    }\r\n    \r\n    FormularioGasto.propTypes = {\r\n        agregarGasto:PropTypes.func.isRequired\r\n    }\r\n    export default FormularioGasto;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Gasto extends Component {\r\n    render(){\r\n        const {cantidadGasto, nombreGasto} = this.props.gasto;\r\n        return (\r\n\r\n            <li className=\"gastos\">\r\n                <p>\r\n                    {nombreGasto}\r\n                    <span className=\"gasto\">${cantidadGasto}</span>\r\n                </p>\r\n\r\n            </li>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nGasto.proptypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Gasto;","import React, {Component} from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Listado extends Component{\r\n    render(){\r\n        return(\r\n            <div className='gastos-realizados'>\r\n                <h2>Listado</h2>\r\n                {Object.keys(this.props.gastos).map(key =>(\r\n                    <Gasto\r\n                        key={key}\r\n                        gasto={this.props.gastos[key]}\r\n                    />\r\n                ))}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nListado.propTypes = {\r\n   gastos: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Listado;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\nclass Presupuesto extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className='alert alert-primary'>\r\n                 Presupuesto: $ {this.props.presupuesto}\r\n\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPresupuesto.propTypes={\r\n    presupuesto: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Presupuesto;","export const validarPresupuesto = presupuesto => {\r\n    let totalPresupuesto = parseInt(presupuesto, 10)|| 0;\r\n\r\n    if(totalPresupuesto > 0 ) {\r\n        return totalPresupuesto;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const revisarPresupuesto = (presupuesto,restante) => {\r\n    let clase;\r\n    // Comprobar el 25% \r\n    if( (presupuesto / 4) > restante) {\r\n         clase = 'alert alert-danger';\r\n    } else if( (presupuesto / 2) > restante) {\r\n        clase = 'alert alert-warning'\r\n    } else {\r\n        clase = 'alert alert alert-success';\r\n    }\r\n    return clase;\r\n} ","import React, {Component} from 'react';\r\nimport {revisarPresupuesto} from '../helper'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Restante extends Component{\r\n\r\n    render(){\r\n        const presupuesto = this.props.presupuesto;\r\n        const restante = this.props.restante;\r\n\r\n        return(\r\n            <div className={revisarPresupuesto(presupuesto,restante)}>\r\n                 Restante: $ {this.props.restante}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRestante.propTypes={\r\n    presupuesto: PropTypes.string.isRequired,\r\n    restante: PropTypes.string.isRequired\r\n}\r\nexport default Restante;","import React, {Component} from 'react';\r\nimport Presupuesto from './Presupuesto';\r\nimport Restante from './Restante';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass ControlPresupuesto extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Presupuesto\r\n                    presupuesto ={this.props.presupuesto}\r\n                />\r\n                <Restante\r\n                    presupuesto ={this.props.presupuesto}\r\n                    restante = {this.props.restante}\r\n                />\r\n\r\n            </React.Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.string.isRequired,\r\n    restante: PropTypes.string.isRequired\r\n}\r\n\r\nexport default ControlPresupuesto;","import React, { Component } from 'react';\nimport '../css/App.css';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Listado from './Listado';\nimport  ControlPresupuesto from './ControlPresupuesto'\nimport {validarPresupuesto} from '../helper';\n\nclass App extends Component {\n  \n  state = {\n    presupuesto: '',\n    restante:'',\n    gastos:{}\n  }\n\n  componentDidMount(){\n   this.obtenerPresupuesto();\n  }\n\n  obtenerPresupuesto = () =>{\n    let presupuesto = prompt(\"Para iniciar escribe tu presupesto \");\n    let resultado = validarPresupuesto(presupuesto);\n    if (resultado){\n      this.setState({\n        presupuesto: presupuesto,\n        restante: presupuesto\n      })\n    }else{\n        this.obtenerPresupuesto();\n      }\n    }\n\n  //Agregar gasto al objeto del state\n  agregarGasto = gasto =>{\n    const gastos = {...this.state.gastos};\n\n    gastos[`gasto${Date.now()}`]=gasto;\n\n    this.restarPresupuesto(gasto.cantidadGasto);\n\n    this.setState({\n      gastos\n    })\n\n  }\n\n  //restar del presupuesto \n\n  restarPresupuesto = cantidad=>{\n    let restar = Number(cantidad);\n    let restante = this.state.restante;\n    restante -= restar;\n    restante = String(restante);\n    \n    this.setState({\n      restante\n    })\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App container\">\n        <Header\n          titulo ='Gasto Semanal'/>\n        <div className=\"contenido-principal contenido\">\n          <div className=\"row\">\n            <div className=\"one-half column\">\n                <Formulario\n                    agregarGasto= {this.agregarGasto}\n                />\n            </div>\n            <div className=\"one-half column\">\n              <Listado\n                  gastos = {this.state.gastos}\n              />\n\n              <ControlPresupuesto\n                presupuesto = {this.state.presupuesto}\n                restante = {this.state.restante}\n              />\n\n            </div>\n                        \n\n          </div>\n\n        </div>\n       \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}